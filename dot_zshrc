if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

zstyle ':completion:*' completer _complete _ignored _approximate
autoload -Uz compinit
compinit

zstyle ':omz:update' mode disabled
ENABLE_CORRECTION="false" 
export FZF_COMPLETION_OPTS='--border --info=inline'

source $(brew --prefix)/opt/antidote/share/antidote/antidote.zsh
antidote load

source <(fzf --zsh)

### disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
### set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
### set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
### switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'

## default editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi
export VISUAL=$EDITOR

## aliases

### general
alias cat="bat"
alias vim="nvim"
alias vi="nvim"
alias ls="eza -a"
alias la="eza -al --git --no-user"
alias gg-dependabot="gh combine-prs --query 'author:app/dependabot'"
alias epoch="date +%s"
alias zshrc="chezmoi edit ~/.zshrc --apply"

### saml2aws
alias docker-login='saml2aws exec --exec-profile=monolith -- aws ecr get-login-password | docker login --password-stdin --username AWS 264606497040.dkr.ecr.us-east-1.amazonaws.com'
alias ecr='saml-monolith ./scripts/ecr.sh'

### colima
export DOCKER_HOST=unix:///$HOME/.colima/docker.sock
alias colima-start="colima start --arch aarch64 --vm-type=vz --vz-rosetta --mount-type=virtiofs --cpu=4 --memory=8 --disk=120"
alias colima-start-default="colima start --cpu=4 --memory=8 --disk=120"

## environment variables
export ZLE_RPROMPT_INDENT=0

### credentials
export NPM_BASE=$(keychain-environment-variable NPM_BASE)
export NPM_REPO_USERNAME=$(keychain-environment-variable NPM_REPO_USERNAME)
export NPM_REPO_PASSWORD=$(keychain-environment-variable NPM_REPO_PASSWORD)
export NPM_REPO_LOGIN="${NPM_REPO_USERNAME}:${NPM_REPO_PASSWORD}"
export GEM_REPO_LOGIN=$(keychain-environment-variable GEM_REPO_LOGIN)
export MVN_REPO_LOGIN=$(keychain-environment-variable MVN_REPO_LOGIN)
export MASTER_GENERATOR_LOGIN=$(keychain-environment-variable MASTER_GENERATOR_LOGIN)
export POETRY_HTTP_BASIC_IBPYPI_USERNAME=$(keychain-environment-variable POETRY_HTTP_BASIC_REPO_USERNAME)
export POETRY_HTTP_BASIC_IBPYPI_PASSWORD=$(keychain-environment-variable POETRY_HTTP_BASIC_REPO_PASSWORD)
export RUNSCOPE_TOKEN=$(keychain-environment-variable RUNSCOPE_PAT)
export GITHUB_TOKEN=$(keychain-environment-variable GITHUB_TOKEN)
export DD_API_KEY=$(keychain-environment-variable DD_API_KEY)
export DD_APP_KEY=$(keychain-environment-variable DD_APP_KEY)
export GEMINI_API_KEY=$(keychain-environment-variable GEMINI_API_KEY)

### saml2aws qol
export AWS_FEDERATION_TOKEN_TTL=12h
export AWS_ASSUME_ROLE_TTL=1h
export AWS_DEFAULT_REGION=us-east-1
export AWS_SESSION_TTL=12h
export AWS_REGION=us-east-1
export SAML2AWS_LOGIN_SESSION_DURATION=43200
export SAML2AWS_SESSION_DURATION=3600

#### tlog
export KMS_ALIAS=alias/tlog-serverless-adapter-config-data

### path stuffs
export PATH="/Users/gavin.hailey/.local/bin:$PATH"
export PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/grep/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/gnu-getopt/bin:$PATH"
export PATH="/Users/gavin.hailey/.moon/bin:$PATH"


## completions 

### saml2aws
eval "$(saml2aws --completion-script-zsh)"

### lefthook
eval "$(lefthook completion zsh)"

### zdf
zdf completion zsh > "${fpath[1]}/_zdf"

### ngrok
if command -v ngrok &>/dev/null; then
  eval "$(ngrok completion)"
fi

### chezmoi
source <(chezmoi completion zsh)

### moon
source <(moon completions)

[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

## development environment version managers

### uv
eval "$(uv generate-shell-completion zsh)"
eval "$(uvx --generate-shell-completion zsh)"

### jenv
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

### rbenv
eval "$(rbenv init - zsh)"

### terraform
# export PATH="$HOME/.tfenv/bin:$PATH"

### rust
export PATH=$PATH:/Users/$USER/.cargo/bin

### golang
export GOPATH="$HOME/.go"
export GOBIN="$HOME/.local/bin"

### deno
. "/Users/gavin.hailey/.deno/env"

### nvm
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion


# pnpm
export PNPM_HOME="/Users/gavin.hailey/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# zoxide
eval "$(zoxide init zsh --cmd cd --hook pwd)"

